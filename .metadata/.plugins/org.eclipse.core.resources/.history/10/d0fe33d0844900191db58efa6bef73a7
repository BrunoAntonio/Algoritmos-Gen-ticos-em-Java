package algoritmo;

import java.util.ArrayList;
import java.util.List;

import org.jgap.Configuration;
import org.jgap.IChromosome;

public class AlgoritmoGenetico {

	Configuration configuraton;
	int numeroGeracoes = 100;
	Double limite = 3.0;
	int tamanhoPopulacao = 10;
	int taxaMutacao = 100;

	List<IChromosome> melhoresChromossomos = new ArrayList<>();
	List<Produto> produtos = new ArrayList<>();
	IChromosome melhore;

	public void carregar() {
		Produto geleiraDako = new Produto("Geleira Dako", 0.751, 999.90);
		Produto iphone6 = new Produto("Iphone 6", 0.000089, 2911.12);
		Produto tv55 = new Produto("TV 55", 0.400, 4346.99);
		Produto tv50 = new Produto("TV 50", 0.290, 3999.90);
		Produto tv42 = new Produto("TV 42", 0.200, 2999.00);
		Produto notebookDell = new Produto("Notebook Dell", 0.00350, 2499.90);
		Produto ventiladorPanasonic = new Produto("Ventilador Panasonic", 0.496, 199.90);
		Produto microondasElectrolux = new Produto("Microondas Electrolux", 0.042, 308.66);
		Produto microondasLG = new Produto("Microondas LG", 0.0544, 429.90);
		Produto microondasPanasonic = new Produto("Microondas Panasonic", 0.0319, 299.29);
		Produto geladeiraBrastemp = new Produto("Geladeira Brastemp", 0.635, 849.00);
		Produto geladeiraConsul = new Produto("Geladeira Consul", 0.870, 1199.89);
		Produto notebookLenovo = new Produto("Notebook Lenovo", 0.498, 1999.90);
		Produto notebookAsus = new Produto("Notebook Asus", 0.527, 3999.00);
	}

	public Double somaEspacos(IChromosome cromossomo) {
		Double soma = 0.0
		for (int i = 0; i < cromossomo.size(); i++) {
			if (cromossomo.getGene(i).equals("1")) {
				
			}
		}
	}

}
